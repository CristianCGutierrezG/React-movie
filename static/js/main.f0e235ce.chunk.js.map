{"version":3,"sources":["images/no_image.jpg","images/react-movie-logo.svg","images/tmdb_logo.svg","images/search-icon.svg","components/Header/Header.styles.js","components/Header/index.jsx","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.jsx","components/Grid/Grid.styles.js","components/Grid/index.jsx","components/Thumb/Thumb.styles.js","components/Thumb/index.jsx","components/Spinner/index.jsx","components/Spinner/Spinner.styles.js","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.jsx","components/Button/Button.styles.js","components/Button/index.js","API.js","helpers.js","hooks/useHomeFetch.js","components/Home.jsx","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.jsx","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.jsx","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.jsx","components/Actor/Actor.styled.js","components/Actor/index.jsx","hooks/useMovieFetch.js","components/Movie.jsx","components/NotFound.jsx","GlobalStyle.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","LogoImg","img","_templateObject3","TMDBLogoImg","_templateObject4","Header","React","createElement","Link","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","concat","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","_ref","image","Text","HeroImage","title","text","Grid","header","children","propType","PropTypes","string","Image","Thumb","movieId","clickable","Spinner","SearchBar","setSearchTerm","_useState","useState","_useState2","_slicedToArray","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","value","prototype","callback","func","button","Button","onClick","prpTypes","_regeneratorRuntime","Op","Object","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","defaultConfig","headers","Content-Type","apiSettings","fetchMovies","_fetchMovies","_asyncToGenerator","_callee","searchTerm","page","endpoint","_context","fetch","json","_x","_x2","apply","arguments","fetchMovie","_fetchMovie","_callee2","_context2","_x3","fetchCredits","_fetchCredits","_callee3","creditsEndpoint","_context3","_x4","getRequestToken","_getRequestToken","_callee4","reqToken","_context4","request_token","authenticate","_authenticate","_callee5","requestToken","username","password","bodyData","sessionId","_context5","_objectSpread","body","JSON","stringify","success","_x5","_x6","_x7","rateMovie","_rateMovie","_callee6","rating","_context6","_x8","_x9","_x10","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Home","_useHomeFetch","_useState3","_useState4","_useState5","_useState6","loading","setLoading","_useState7","_useState8","setError","_useState9","_useState10","isLoadingMore","setIsLoadingMore","movies","_args","API","_toConsumableArray","t0","setItem","useHomeFetch","state0","Fragment","backdrop_path","original_title","overview","map","movie","id","poster_path","NoImage","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","director","credit_id","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","number","Actor","character","imageUrl","Movie","_useMovieFetch","useCallback","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","GlobalStyle","createGlobalStyle","App","Router","Routes","Route","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0e235ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/react-movie-logo.5de5919a.svg\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","module.exports = __webpack_public_path__ + \"static/media/search-icon.80e9d8a2.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  max-width: var(--maxWidth);\r\n  padding: 20px 0;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n  width: 200px;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    width: 150px;\r\n  }\r\n`;\r\n\r\nexport const TMDBLogoImg = styled.img`\r\n  width: 100px;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    width: 80px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport RMDBLogo from \"../../images/react-movie-logo.svg\";\r\nimport TMDBLogo from \"../../images/tmdb_logo.svg\";\r\n\r\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from \"./Header.styles\";\r\n\r\nconst Header = () => (\r\n  <Wrapper>\r\n    <Content>\r\n      <Link to=\"/\">\r\n        <LogoImg src={RMDBLogo} alt=\"rmdb-logo\" />\r\n      </Link>\r\n      <TMDBLogoImg src={TMDBLogo} alt=\"tmdb-logo\" />\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Header;\r\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: linear-gradient(\r\n      to bottom,\r\n      rgba(0, 0, 0, 0) 41%,\r\n      rgba(0, 0, 0, 0.65) 100%\r\n    ),\r\n    url(${({ image }) => image}), var(--darkGrey);\r\n  background-size: 100%, cover;\r\n  background-position: center;\r\n  height: 600px;\r\n  position: relative;\r\n  animation: animateHeroImage 1s;\r\n\r\n  @keyframes animateHeroImage {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  padding: 20px;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  z-index: 100;\r\n  max-width: 700px;\r\n  position: absolute;\r\n  bottom: 40px;\r\n  margin-right: 200px;\r\n  min-height: 100px;\r\n  color: var(--white);\r\n\r\n  h1 {\r\n    font-size: var(--fontSuperBig);\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n\r\n  p {\r\n    font-size: var(--fontMed);\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontSmall);\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 720px) {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//Styles\r\nimport { Wrapper, Content, Text } from \"./HeroImage.styles\";\r\n\r\nconst HeroImage = ({ image, title, text }) => (\r\n  <Wrapper image={image}>\r\n    <Content>\r\n      <Text>\r\n        <h1>{title}</h1>\r\n        <p>{text}</p>\r\n      </Text>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nHeroImage.propTypes = {\r\n  image: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default HeroImage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n\r\n  h1 {\r\n    color: var(--medGrey);\r\n\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  grid-gap: 2rem;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//styles\r\nimport { Wrapper, Content } from \"./Grid.styles\";\r\n\r\nconst Grid = ({ header, children }) => (\r\n  <Wrapper>\r\n    <h1>{header}</h1>\r\n    <Content>{children}</Content>\r\n  </Wrapper>\r\n);\r\n\r\nGrid.propType = {\r\n  header: PropTypes.string,\r\n};\r\n\r\nexport default Grid;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  max-width: 720px;\r\n  transform: all 0.3s;\r\n  object-fit: cover;\r\n  border-radius: 20px;\r\n  animation: animateThumb 0.5s;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  @keyframes animateThumb {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Styles\r\nimport { Image } from \"./Thumb.styles\";\r\n\r\nconst Thumb = ({ image, movieId, clickable }) => (\r\n  <div>\r\n    {clickable ? (\r\n      <Link to={`/${movieId}`}>\r\n        <Image src={image} alt=\"movie-thumb\" />\r\n      </Link>\r\n    ) : (\r\n      <Image src={image} alt=\"movie-thumb\" />\r\n    )}\r\n  </div>\r\n);\r\n\r\nThumb.propTypes = {\r\n  image: PropTypes.string,\r\n  movieId: PropTypes.number,\r\n  clickable: PropTypes.bool,\r\n};\r\n\r\nexport default Thumb;\r\n","import { Spinner } from \"./Spinner.styles\";\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Spinner = styled.div`\r\n  border: 5px solid var(--lightGrey);\r\n  border-top: 5px solid var(--medGrey);\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  animation: spin 0.8s linear infinite;\r\n  margin: 20px auto;\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100px;\r\n  background: var(--darkGrey);\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  position: relative;\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  height: 55px;\r\n  background: var(--medGrey);\r\n  margin: 0 auto;\r\n  border-radius: 40px;\r\n  color: var(--white);\r\n\r\n  img {\r\n    position: absolute;\r\n    left: 15px;\r\n    top: 14px;\r\n    width: 30px;\r\n  }\r\n\r\n  input {\r\n    font-size: var(--fontBig);\r\n    position: absolute;\r\n    left: 0;\r\n    margin: 8px auto;\r\n    padding: 0 0 0 60px;\r\n    border: 0;\r\n    width: 95%;\r\n    background: transparent;\r\n    height: 40px;\r\n    color: var(--white);\r\n\r\n    :focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//Image\r\nimport searchIcon from \"../../images/search-icon.svg\";\r\n\r\n//Styles\r\nimport { Wrapper, Content } from \"./SearchBar.styles\";\r\n\r\nconst SearchBar = ({ setSearchTerm }) => {\r\n  const [state, setState] = useState(\"\");\r\n  const initial = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (initial.current) {\r\n      initial.current = false;\r\n      return;\r\n    }\r\n\r\n    const timer = setTimeout(() => {\r\n      setSearchTerm(state);\r\n    }, 500);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [setSearchTerm, state]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Content>\r\n        <img src={searchIcon} alt=\"search.icon\" />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search Movie\"\r\n          onChange={(event) => setState(event.currentTarget.value)}\r\n          value={state}\r\n        />\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nSearchBar.prototype = {\r\n  callback: PropTypes.func,\r\n};\r\n\r\nexport default SearchBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.button`\r\n  display: block;\r\n  background: var(--darkGrey);\r\n  width: 20%;\r\n  min-width: 200px;\r\n  height: 60px;\r\n  border-radius: 30px;\r\n  color: var(--white);\r\n  border: 0;\r\n  font-size: var(--fontBig);\r\n  margin: 20px auto;\r\n  transition: all 0.3s;\r\n  outline: none;\r\n  cursor: pointer;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//Styles\r\nimport { Wrapper } from \"./Button.styles\";\r\n\r\nconst Button = ({ text, callback }) => (\r\n  <Wrapper type=\"button\" onClick={callback}>\r\n    {text}\r\n  </Wrapper>\r\n);\r\n\r\nButton.prpTypes = {\r\n  text: PropTypes.string,\r\n  callback: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = (money) => {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\nexport const isPersistedState = (stateName) => {\n  const sessionState = sessionStorage.getItem(stateName);\n  return sessionState && JSON.parse(sessionState);\n};\n","import { useState, useEffect } from \"react\";\r\n\r\n//API\r\nimport API from \"../API\";\r\n\r\n//Helpers\r\nimport { isPersistedState } from \"../helpers\";\r\n\r\nconst initialState = {\r\n  page: 0,\r\n  results: [],\r\n  total_pages: 0,\r\n  total_results: 0,\r\n};\r\n\r\nexport const useHomeFetch = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [state, setState] = useState(initialState);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n\r\n  const fetchMovies = async (page, searchTerm = \"\") => {\r\n    try {\r\n      setError(false);\r\n      setLoading(true);\r\n\r\n      //Se hace un llamado a la API para que devuelva un objeto con las peliculas\r\n      const movies = await API.fetchMovies(searchTerm, page);\r\n\r\n      setState((prev) => ({\r\n        ...movies,\r\n\r\n        results:\r\n          page > 1 ? [...prev.results, ...movies.results] : [...movies.results],\r\n      }));\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  //Initial and search\r\n  useEffect(() => {\r\n    if (!searchTerm) {\r\n      const sessionState = isPersistedState(\"homeState\");\r\n\r\n      if (sessionState) {\r\n        setState(sessionState);\r\n        return;\r\n      }\r\n    }\r\n\r\n    setState(initialState);\r\n    fetchMovies(1, searchTerm);\r\n  }, [searchTerm]);\r\n\r\n  //Load More\r\n  useEffect(() => {\r\n    if (!isLoadingMore) return;\r\n\r\n    fetchMovies(state.page + 1, searchTerm);\r\n    setIsLoadingMore(false);\r\n  }, [isLoadingMore, searchTerm, state.page]);\r\n\r\n  //Write to sessionStorage\r\n  useEffect(() => {\r\n    if (!searchTerm) sessionStorage.setItem(\"homeState\", JSON.stringify(state));\r\n  }, [searchTerm, state]);\r\n\r\n  return { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\n//config\r\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\";\r\n\r\n//components\r\nimport HeroImage from \"./HeroImage\";\r\nimport Grid from \"./Grid\";\r\nimport Thumb from \"./Thumb\";\r\nimport Spinner from \"./Spinner\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Button from \"./Button\";\r\n\r\n//Hook\r\nimport { useHomeFetch } from \"../hooks/useHomeFetch\";\r\n\r\n//Image\r\nimport NoImage from \"../images/no_image.jpg\";\r\n\r\n//API\r\nimport API from \"../API\";\r\n\r\n// Con Hooks\r\nconst Home = () => {\r\n  const {\r\n    state,\r\n    loading,\r\n    error,\r\n    searchTerm,\r\n    setSearchTerm,\r\n    setIsLoadingMore,\r\n  } = useHomeFetch();\r\n\r\n  const state0 = state.results[0];\r\n\r\n  if (error) return <div> Something went wrong ...</div>;\r\n\r\n  return (\r\n    <>\r\n      {!searchTerm && state0 ? (\r\n        <HeroImage\r\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state0.backdrop_path}`}\r\n          title={state0.original_title}\r\n          text={state0.overview}\r\n        />\r\n      ) : null}\r\n      <SearchBar setSearchTerm={setSearchTerm} />\r\n      <Grid header={searchTerm ? \"Search Result\" : \"Popular Movies\"}>\r\n        {state.results.map((movie) => (\r\n          <Thumb\r\n            key={movie.id}\r\n            clickable\r\n            image={\r\n              movie.poster_path\r\n                ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\r\n                : NoImage\r\n            }\r\n            movieId={movie.id}\r\n          />\r\n        ))}\r\n      </Grid>\r\n      {loading && <Spinner />}\r\n      {state.page < state.total_pages && !loading && (\r\n        <Button text=\"Load More\" callback={() => setIsLoadingMore(true)} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n//Con class\r\n\r\n// const initialState = {\r\n//   page: 0,\r\n//   results: [],\r\n//   total_pages: 0,\r\n//   total_results: 0,\r\n// };\r\n\r\n// class Home extends Component {\r\n//   state = {\r\n//     movies: initialState,\r\n//     searchTerm: \"\",\r\n//     isLoadingMore: false,\r\n//     loading: false,\r\n//     error: false,\r\n//   };\r\n\r\n//   fetchMovies = async (page, searchTerm = \"\") => {\r\n//     try {\r\n//       this.setState({ error: false, loading: true });\r\n\r\n//       //Se hace un llamado a la API para que devuelva un objeto con las peliculas\r\n//       const movies = await API.fetchMovies(searchTerm, page);\r\n\r\n//       this.setState((prev) => ({\r\n//         ...prev,\r\n//         movies: {\r\n//           ...movies,\r\n//           results:\r\n//             page > 1\r\n//               ? [...prev.movies.results, ...movies.results]\r\n//               : [...movies.results],\r\n//         },\r\n//         loading: false,\r\n//       }));\r\n//     } catch (error) {\r\n//       this.setState({ error: true, loading: false });\r\n//     }\r\n//   };\r\n\r\n//   handleSearch = (searchTerm) =>\r\n//     this.setState({ movies: initialState, searchTerm }, () =>\r\n//       this.fetchMovies(1, this.state.searchTerm)\r\n//     );\r\n\r\n//   handleLoadMore = () =>\r\n//     this.fetchMovies(this.state.movies.page + 1, this.state.searchTerm);\r\n\r\n//   componentDidMount() {\r\n//     this.fetchMovies(1);\r\n//   }\r\n\r\n//   render() {\r\n//     const { searchTerm, movies, loading, error } = this.state;\r\n//     if (error) return <div> Something went wrong ...</div>;\r\n\r\n//     return (\r\n//       <>\r\n//         {!searchTerm && movies.results[0] ? (\r\n//           <HeroImage\r\n//             image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${movies.results[0].backdrop_path}`}\r\n//             title={movies.results[0].original_title}\r\n//             text={movies.results[0].overview}\r\n//           />\r\n//         ) : null}\r\n//         <SearchBar setSearchTerm={this.handleSearch} />\r\n//         <Grid header={searchTerm ? \"Search Result\" : \"Popular Movies\"}>\r\n//           {movies.results.map((movie) => (\r\n//             <Thumb\r\n//               key={movie.id}\r\n//               clickable\r\n//               image={\r\n//                 movie.poster_path\r\n//                   ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\r\n//                   : NoImage\r\n//               }\r\n//               movieId={movie.id}\r\n//             />\r\n//           ))}\r\n//         </Grid>\r\n//         {loading && <Spinner />}\r\n//         {movies.page < movies.total_pages && !loading && (\r\n//           <Button text=\"Load More\" callback={this.handleLoadMore} />\r\n//         )}\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 70px;\r\n  background: var(--medGrey);\r\n  color: var(--white);\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  max-width: var(--maxWidth);\r\n  padding: 0 20px;\r\n\r\n  span {\r\n    font-size: var(--fontMed);\r\n    color: var(--Width);\r\n    padding-right: 10px;\r\n\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontSmall);\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Styles\r\nimport { Wrapper, Content } from \"./BreadCrumb.styles\";\r\n\r\nconst BreadCrumb = ({ movieTitle }) => (\r\n  <Wrapper>\r\n    <Content>\r\n      <Link to=\"/\">\r\n        <span>Home</span>\r\n      </Link>\r\n      <span>|</span>\r\n      <span>{movieTitle}</span>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nBreadCrumb.propTypes = {\r\n  movieTitle: PropTypes.string,\r\n};\r\n\r\nexport default BreadCrumb;\r\n","import styled from \"styled-components\";\r\nimport { BACKDROP_SIZE, IMAGE_BASE_URL } from \"../../config\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: ${({ backdrop }) =>\r\n    backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})` : \"#000\"};\r\n  background-size: cover;\r\n  background-position: center;\r\n  padding: 40px 20px;\r\n  animation: animateMovieInfo 1s;\r\n\r\n  @keyframes animateMovieInfo {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  border-radius: 20px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    max-height: none;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  width: 100%;\r\n  padding: 20px 40px;\r\n  color: var(--white);\r\n  overflow: hidden;\r\n\r\n  .rating-directors {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  .score {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 35px;\r\n    height: 35px;\r\n    background: #fff;\r\n    color: #000;\r\n    font-weight: 800px;\r\n    border-radius: 50%;\r\n    margin: 0;\r\n  }\r\n\r\n  .director {\r\n    margin: 0 0 0 40px;\r\n\r\n    p {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  h1 {\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//Components\r\nimport Thumb from \"../Thumb\";\r\n\r\n//config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\r\n\r\n//Image\r\nimport NoImage from \"../../images/no_image.jpg\";\r\n\r\n//Styles\r\nimport { Wrapper, Content, Text } from \"./MovieInfo.styles\";\r\n\r\nconst MovieInfo = ({ movie }) => (\r\n  <Wrapper backdrop={movie.backdrop_path}>\r\n    <Content>\r\n      <Thumb\r\n        image={\r\n          movie.poster_path\r\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n            : NoImage\r\n        }\r\n        clickable={false}\r\n      />\r\n      <Text>\r\n        <h1>{movie.title}</h1>\r\n        <h3>PLOT</h3>\r\n        <p>{movie.overview}</p>\r\n        <div className=\"rating-directors\">\r\n          <div>\r\n            <h3>RATING</h3>\r\n            <div className=\"score\">{movie.vote_average}</div>\r\n          </div>\r\n          <div className=\"director\">\r\n            <h3>DIRECTOR{movie.directors.length > 1 ? \"S\" : \"\"}</h3>\r\n            {movie.directors.map((director) => (\r\n              <p key={director.credit_id}>{director.name}</p>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Text>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nMovieInfo.prpTypes = {\r\n  movie: PropTypes.object,\r\n};\r\n\r\nexport default MovieInfo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  min-height: 100px;\r\n  background: var(--darkGrey);\r\n  padding: 0 2px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: (--maxWidth);\r\n  width: 100%;\r\n  margin: 0 auto;\r\n\r\n  .column {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: var(--medGrey);\r\n    border-radius: 20px;\r\n    margin: 0 20px;\r\n    flex: 1;\r\n  }\r\n\r\n  :first-child {\r\n    margin-left: 0;\r\n  }\r\n\r\n  :last-child {\r\n    margin-right: 0;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n\r\n    .column {\r\n      margin: 20px 0;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//Helpers\r\nimport { calcTime, convertMoney } from \"../../helpers\";\r\n\r\n//Styles\r\nimport { Wrapper, Content } from \"./MovieInfoBar.styles\";\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) => (\r\n  <Wrapper>\r\n    <Content>\r\n      <div className=\"column\">\r\n        <p>running time: {calcTime(time)}</p>\r\n      </div>\r\n      <div className=\"column\">\r\n        <p>Budget: {convertMoney(budget)}</p>\r\n      </div>\r\n      <div className=\"column\">\r\n        <p>Revenue: {convertMoney(revenue)}</p>\r\n      </div>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nMovieInfoBar.prpTypes = {\r\n  time: PropTypes.number,\r\n  budget: PropTypes.number,\r\n  revenue: PropTypes.number,\r\n};\r\n\r\nexport default MovieInfoBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  color: var(--white);\r\n  background: var(--darkGrey);\r\n  border-radius: 20px;\r\n  padding: 5px;\r\n  text-align: center;\r\n\r\n  h3 {\r\n    margin: 10px 0 0 0;\r\n  }\r\n\r\n  p {\r\n    margin: 5px 0;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n  border-radius: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//Styles\r\nimport { Wrapper, Image } from \"./Actor.styled\";\r\n\r\nconst Actor = ({ name, character, imageUrl }) => (\r\n  <Wrapper>\r\n    <Image src={imageUrl} alt=\"actor-thumb\" />\r\n    <h3>{name}</h3>\r\n    <p>{character}</p>\r\n  </Wrapper>\r\n);\r\n\r\nActor.propTypes = {\r\n  name: PropTypes.string,\r\n  character: PropTypes.string,\r\n  imageUrl: PropTypes.string,\r\n};\r\n\r\nexport default Actor;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport API from \"../API\";\r\n//Helpers\r\nimport { isPersistedState } from \"../helpers\";\r\n\r\nexport const useMovieFetch = (movieId) => {\r\n  const [state, setState] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  const fetchMovie = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(false);\r\n\r\n      const movie = await API.fetchMovie(movieId);\r\n      const credits = await API.fetchCredits(movieId);\r\n\r\n      //Get director only\r\n      const directors = credits.crew.filter(\r\n        (member) => member.job === \"Director\"\r\n      );\r\n\r\n      setState({\r\n        ...movie,\r\n        actors: credits.cast,\r\n        directors,\r\n      });\r\n\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n  }, [movieId]);\r\n\r\n  useEffect(() => {\r\n    const sessionState = isPersistedState(movieId);\r\n\r\n    if (sessionState) {\r\n      setState(sessionState);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    fetchMovie();\r\n  }, [movieId, fetchMovie]);\r\n\r\n  //write to sessionStorage\r\n  useEffect(() => {\r\n    sessionStorage.setItem(movieId, JSON.stringify(state));\r\n  }, [movieId, state]);\r\n\r\n  return { state, loading, error };\r\n};\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n//Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\r\n\r\n//Components\r\nimport BreadCrumb from \"./BreadCrumb\";\r\nimport Grid from \"./Grid\";\r\nimport Spinner from \"./Spinner\";\r\nimport MovieInfo from \"./MovieInfo\";\r\nimport MovieInfoBar from \"./MovieInfoBar\";\r\nimport Actor from \"./Actor\";\r\n\r\n//Hook\r\nimport { useMovieFetch } from \"../hooks/useMovieFetch\";\r\n//Image\r\nimport NoImage from \"../images/no_image.jpg\";\r\n\r\nconst Movie = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const { state: movie, loading, error } = useMovieFetch(movieId);\r\n\r\n  if (loading) return <Spinner />;\r\n  if (error) return <div>something went wrong...</div>;\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumb movieTitle={movie.original_title} />\r\n      <MovieInfo movie={movie} />\r\n      <MovieInfoBar\r\n        time={movie.runtime}\r\n        budget={movie.budget}\r\n        revenue={movie.revenue}\r\n      />\r\n      <Grid header=\"Actors\">\r\n        {movie.actors.map((actor) => (\r\n          <Actor\r\n            key={actor.credit_id}\r\n            name={actor.name}\r\n            character={actor.character}\r\n            imageUrl={\r\n              actor.profile_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                : NoImage\r\n            }\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => <div> NotFound </div>;\r\n\r\nexport default NotFound;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    :root{\r\n        --maxWidth: 1280px;\r\n        --white: #fff;\r\n        --lightGrey: #eee;\r\n        --medGrey: #353535;\r\n        --darkGrey: #1c1c1c;\r\n        --fontSuperBig: 2.5rem;\r\n        --fontBig: 1.5rem;\r\n        --fontMed: 1.2rem;\r\n        --fontSmall: 1rem;\r\n    }\r\n\r\n    * {\r\n        box-sizing: border-box;\r\n        font-family: 'Able', sans-serif;\r\n    }\r\n\r\n    body{\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    h1{\r\n        font-size: 2rem;\r\n        font-weight: 600;\r\n        color: var(--white);\r\n    }\r\n\r\n    h3{\r\n        font-size: 1.1rem;\r\n        font-weight: 600;\r\n    }\r\n\r\n    p{\r\n        font-size: 1rem;\r\n        color: var(--white);\r\n    }\r\n\r\n\r\n`;\r\n","import React, { Fragment, useState, useRef, useEffect } from \"react\"; //siempre hay que importar React es para usar jsx\nimport { json } from \"react-router-dom\";\n\n//Routing\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\n//Components\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Movie from \"./components/Movie\";\nimport NotFound from \"./components/NotFound\";\n\n//Styles\nimport { GlobalStyle } from \"./GlobalStyle\";\n\n// import { v4 as uuidv4 } from \"uuid\";\n// import { TodoList } from \"./TodoList\";\n\n// const KEY = \"todoApp.todos\";\n\n// const App = () => {\n//   // return <div className=\"App\">Start here.</div>;\n//   const [todos, setTodos] = useState([\n//     { id: 1, task: \"Tarea 1\", completed: false },\n//   ]);\n\n//   const todoTaskRef = useRef();\n\n//   useEffect(() => {\n//     const storedTodos = JSON.parse(localStorage.getItem(KEY));\n//     if (storedTodos) {\n//       setTodos(storedTodos);\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     localStorage.setItem(KEY, JSON.stringify(todos));\n//   }, [todos]);\n\n//   const toggleTodo = (id) => {\n//     const newTodos = [...todos];\n//     const todo = newTodos.find((todo) => todo.id === id);\n//     todo.completed = !todo.completed;\n//     setTodos(newTodos);\n//   };\n\n//   const handleTodoAdd = () => {\n//     const task = todoTaskRef.current.value;\n//     if (task === \"\") return;\n\n//     setTodos((prevTodos) => {\n//       return [...prevTodos, { id: uuidv4(), task, completed: false }];\n//     });\n\n//     todoTaskRef.current.value = null;\n//   };\n\n//   const handleClearAll = () => {\n//     const newTodos = todos.filter((todo) => !todo.completed);\n//     setTodos(newTodos);\n//   };\n\n//   return (\n//     <Fragment>\n//       <TodoList todos={todos} toggleTodo={toggleTodo} />\n//       <input ref={todoTaskRef} type=\"text\" placeholder=\"Nueva Tarea\" />\n//       <button onClick={handleTodoAdd}>➕</button>\n//       <button onClick={handleClearAll}>🗑</button>\n//       <div>\n//         Te quedan {todos.filter((todo) => !todo.completed).length} tareas por\n//         terminar\n//       </div>\n//     </Fragment>\n//   );\n// };\n\nconst App = () => (\n  <Router>\n    <Header />\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"/:movieId\" element={<Movie />} />\n      <Route path=\"/*\" element={<NotFound />} />\n    </Routes>\n    <GlobalStyle />\n  </Router>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\"; //Se importa la App.js como un componente\n\nReactDOM.render(\n  //Funcion para renderizar elementos\n  // Se le pasa el componente que se quiere renderizar\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  //se renderiza el componente en un div\n  document.getElementById(\"root\") //root es un div en el documento html\n);\n"],"sourceRoot":""}